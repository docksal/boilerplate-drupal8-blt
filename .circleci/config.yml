version: 2
defaults: &defaults
  docker:
    - image: fourkitchens/ubuntu-1604-php72-node10-apache
  environment:
    DATE_TIMEZONE: America/New_York
    TERM: xterm
    ACQUIA_CANONICAL_ENV: prod
    ACQUIA_ENDPOINT: https://cloudapi.acquia.com/v1
    ACQUIA_REALM: devcloud
    ACQUIA_SITE: s5ea988db29353
    ACQUIA_REPO: s5ea988db29353@svn-2420.devcloud.hosting.acquia.com:s5ea988db29353.git
    ACQUIA_BOT_EMAIL: pipeline@circleci.com
    ACQUIA_BOT_NAME: "Pipeline Server"
  working_directory: ~/project

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - run: npm install
      - run: composer install
      - run: echo "Run linting" #&& composer lint
      - run: echo "Build assets for testing" && composer build-assets
    #  - run: cp .circleci/settings.local.php ./docroot/sites/default/settings.local.php
      - run: echo "Get the database backup for testing"
    #  - run: ./scripts/acquia/acquia-get-db-backup.sh $ACQUIA_REALM:$ACQUIA_SITE $ACQUIA_CANONICAL_ENV $ACQUIA_SITE
      - run: echo "Import database"
    #  - run: service mysql start
    #  - run: drush fresh
      - run: echo "Run build scripts"
    #  - run: drush local
      - run: echo "Run tests"
    #  - run: sudo echo '127.0.0.1       project.local' >> /etc/hosts
    #  - run: service apache2 start
    #  - run: chown -R root:www-data ./docroot
      - run: curl "http://boilerplate-drupal8-blt.docksal" 

  dev-deploy:
    <<: *defaults  
    steps:
      - checkout
      - run: "[[ ! -s \"$(git rev-parse --git-dir)/shallow\" ]] || git fetch --unshallow"
      - run: npm install
      - run: composer install
      - run: echo "build assets for deploying" && composer build-assets
      - run: echo "deploying to the $circle_branch on acquia."
      - run: git config --global user.email "$ACQUIA_BOT_EMAIL"
      - run: git config --global user.name "$ACQUIA_BOT_NAME"
      - run: git remote add acquia $ACQUIA_REPO
      - run: ssh-keyscan -H $(echo "$ACQUIA_REPO" | sed 's/.*@\(.*\):.*/\1/') >> ~/.ssh/known_hosts
      - run: git fetch acquia
      - run: "sed -i '1,/######## ACQUIA IGNORE BELOW THIS LINE ########/d' .gitignore"
      # remove any .git directories that may exist in vendor libraries* so those
      # libraries don't get excluded from our repo. Remember kiddies somedir/*
      # returns all files/dirs that are NOT dot (hidden). This protects our repos'
      # .git folder from being blown away.
      - run: find ./* -type d | grep .git | xargs rm -rf
      # Remove unwanted gitignores here. Follow the example below.
      # Remove simplesamlphp .gitignore which would cause our config and metadata
      # symlinks to be ignored. If it's already not there, GREAT!
      # - rm ./vendor/simplesamlphp/simplesamlphp/.gitignore || exit 0
      # Commit and push to Acquia.
      - run: git add .
      - run: git commit -am "Built assets."
      - run: git push acquia $CIRCLE_BRANCH -f --tags
      - run: echo "If deployment was successful, Acquia Cloud dev/post-code-update hook will handle importing config, updating db, and clearing caches."

  stage-deploy:
    <<: *defaults
    environment:
      ACQUIA_REPO: s5ea988db29353@svn-2420.devcloud.hosting.acquia.com:s5ea988db29353.git   
    steps:
      - checkout
      - run: echo "A first hello"
      - run: mkdir -p my_workspace
      - run: echo "Trying out workspaces" > my_workspace/echo-output
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory
          root: my_workspace
          # Must be relative path from root
          paths:
            - echo-output

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - dev-deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
      - stage-deploy:
          requires:
            - dev-deploy
          filters:
            branches:
              only:
                - master
